---
import moon from "@assets/moon.svg?raw";
import sun from "@assets/sun.svg?raw";
import system from "@assets/eclipse.svg?raw";
---

<div id="theme-menu" class="dark">
  <span class="icon moon">
    <Fragment set:html={moon} />
  </span>
  <span class="icon sun">
    <Fragment set:html={sun} />
  </span>
  <span class="icon system">
    <Fragment set:html={system} />
  </span>

  <div class="theme__content">
    <button id="dark-theme-btn" title="Dark theme">
      <span>
        <Fragment set:html={moon} />
      </span>
    </button>

    <button id="light-theme-btn" title="Light theme">
      <span>
        <Fragment set:html={sun} />
      </span>
    </button>

    <button id="system-theme-btn" title="System theme">
      <span>
        <Fragment set:html={system} />
      </span>
    </button>
  </div>
</div>

<style>
  #theme-menu .icon {
    display: none;
  }

  #theme-menu.dark .icon.moon,
  #theme-menu.light .icon.sun,
  #theme-menu.system .icon.system {
    display: block;
  }

  #theme-menu:hover .theme__content {
    height: calc(20px + 30px * 3 + 5px * 3);
    padding-block: 10px;
  }

  #theme-menu.dark #dark-theme-btn span,
  #theme-menu.light #light-theme-btn span,
  #theme-menu.system #system-theme-btn span,
  button:hover span {
    color: var(--card-text-hover);
  }

  .theme__content {
    position: fixed;
    height: 0;
    overflow-y: hidden;
    background-color: var(--bg);
    border-radius: 5px;
    transform: translateX(-5px);

    padding-inline: 5px;

    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    gap: 5px;
  }

  :global(#theme-menu svg),
  button,
  span {
    width: 30px;
    height: 30px;
  }

  button {
    background-color: transparent;
    border: none;
    cursor: pointer;
    color: var(--text);
  }
</style>

<!-- is:inline el script se ejecuta mientras se renderiza la pÃ¡gina -->
<script is:inline>
  const root = document.documentElement;
  // const toggleBtn = document.getElementById("toggle-theme");
  const themeMenu = document.getElementById("theme-menu");
  const systemBtn = document.getElementById("system-theme-btn");
  const darkBtn = document.getElementById("dark-theme-btn");
  const lightBtn = document.getElementById("light-theme-btn");
  const defaultTheme = getSystemTheme();

  const savedTheme = localStorage.getItem("theme");
  if (savedTheme) {
    root.setAttribute(
      "data-theme",
      savedTheme === "system" ? defaultTheme : savedTheme
    );
    themeMenu.className = savedTheme;
  }

  if (themeMenu && darkBtn && lightBtn && systemBtn) {
    lightBtn.addEventListener("click", () => {
      setTheme("light", "light");
    });

    darkBtn.addEventListener("click", () => {
      setTheme("dark", "dark");
    });

    systemBtn.addEventListener("click", () => {
      setTheme("system", defaultTheme);
    });
  }

  function setTheme(value, theme) {
    themeMenu.className = value;
    localStorage.setItem("theme", value);
    root.setAttribute("data-theme", theme);
  }

  /**
   * Retorna el tema del sistema
   */
  function getSystemTheme() {
    return window.matchMedia("(prefers-color-scheme: dark)").matches
      ? "dark"
      : "light";
  }
</script>
